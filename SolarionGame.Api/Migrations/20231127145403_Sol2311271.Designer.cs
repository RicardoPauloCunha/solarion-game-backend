// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SolarionGame.Infrastructure.Data;

#nullable disable

namespace SolarionGame.Api.Migrations
{
    [DbContext(typeof(SolarionGameContext))]
    [Migration("20231127145403_Sol2311271")]
    partial class Sol2311271
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SolarionGame.Domain.AggregatesModel.PasswordRecoveryAggregate.Models.PasswordRecoveryModel", b =>
                {
                    b.Property<long>("PasswordRecoveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("VerificationCode")
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.HasKey("PasswordRecoveryId");

                    b.HasIndex("UserId");

                    b.ToTable("tb_password_recovery", (string)null);
                });

            modelBuilder.Entity("SolarionGame.Domain.AggregatesModel.ScoreAggregate.Models.DecisionModel", b =>
                {
                    b.Property<long>("ScoreId")
                        .HasColumnType("bigint");

                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.HasKey("ScoreId", "ActionType");

                    b.ToTable("tb_decision", (string)null);
                });

            modelBuilder.Entity("SolarionGame.Domain.AggregatesModel.ScoreAggregate.Models.ScoreModel", b =>
                {
                    b.Property<long>("ScoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("HeroType")
                        .HasColumnType("int");

                    b.Property<int>("RatingType")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("ScoreId");

                    b.HasIndex("UserId");

                    b.ToTable("tb_score", (string)null);
                });

            modelBuilder.Entity("SolarionGame.Domain.AggregatesModel.UserAggregate.Models.UserModel", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Password")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("tb_user", (string)null);
                });

            modelBuilder.Entity("SolarionGame.Domain.AggregatesModel.PasswordRecoveryAggregate.Models.PasswordRecoveryModel", b =>
                {
                    b.HasOne("SolarionGame.Domain.AggregatesModel.UserAggregate.Models.UserModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SolarionGame.Domain.AggregatesModel.ScoreAggregate.Models.DecisionModel", b =>
                {
                    b.HasOne("SolarionGame.Domain.AggregatesModel.ScoreAggregate.Models.ScoreModel", null)
                        .WithMany("Decisions")
                        .HasForeignKey("ScoreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SolarionGame.Domain.AggregatesModel.ScoreAggregate.Models.ScoreModel", b =>
                {
                    b.HasOne("SolarionGame.Domain.AggregatesModel.UserAggregate.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SolarionGame.Domain.AggregatesModel.ScoreAggregate.Models.ScoreModel", b =>
                {
                    b.Navigation("Decisions");
                });
#pragma warning restore 612, 618
        }
    }
}
